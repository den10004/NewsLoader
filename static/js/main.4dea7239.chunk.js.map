{"version":3,"sources":["components/card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","description","item","title","url","urlToImage","className","src","alt","href","App","useState","news","setCards","wrapperReference","useRef","card","setCard","renderNews","slice","handleScroll","e","target","scrollWidth","scrollLeft","clientWidth","useEffect","getCards","a","axios","get","res","data","articles","current","addEventListener","removeEventListener","ref","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAuBeA,MApBf,SAAcC,GACZ,IAAMC,EAAcD,EAAME,KAAKD,YACzBE,EAAQH,EAAME,KAAKC,MACnBC,EAAMJ,EAAME,KAAKE,IACjBC,EAAaL,EAAME,KAAKG,WAE9B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKF,EAAYG,IAAI,qDAC1B,sBAAKF,UAAU,eAAf,UACE,qBAAKA,UAAU,eAEf,mBAAGG,KAAML,EAAT,kDACA,oBAAIE,UAAU,cAAd,SAA6BH,IAC7B,oBAAIG,UAAU,oBAAd,SAAmCL,WC4C5BS,MAxDf,WACE,MAAmC,GAA3BP,EAAR,EAAQA,MAAOC,EAAf,EAAeA,IAAKC,EAApB,EAAoBA,WAIpB,EAAyBM,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAmBC,iBAAO,MAChC,EAAwBJ,mBALL,IAKnB,mBAAOK,EAAP,KAAaC,EAAb,KACIC,EAAU,sBACTN,EAAKO,MAAM,EAPG,KAML,YAETP,EAAKO,MARS,GAQSH,KAItBI,EAAe,SAACC,GAChBA,EAAEC,OAAOC,YAAcF,EAAEC,OAAOE,YAAcH,EAAEC,OAAOG,aACzDR,EAAQD,EAAO,IAqBnB,OAjBAU,qBAAU,WACR,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IACtB,iLAFa,OACTC,EADS,OAIflB,EAASkB,EAAIC,KAAKC,UAJH,2CAAH,qDAMdN,MACC,IAEHD,qBAAU,WACR,IAAQQ,EAAYpB,EAAZoB,QAER,OADAA,EAAQC,iBAAiB,SAAUf,GAC5B,kBAAMc,EAAQE,oBAAoB,SAAUhB,MAElD,CAACA,IAGF,sBAAKd,UAAU,MAAf,UACE,iHACA,oQACA,qBAAKA,UAAU,UAAU+B,IAAKvB,EAA9B,SACGI,EAAWoB,KAAI,SAACpC,EAAMqC,GAAP,OACd,cAAC,EAAD,CAEErC,KAAMA,EACNE,IAAKA,EACLD,MAAOA,EACPE,WAAYA,GAJPkC,YCrCFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4dea7239.chunk.js","sourcesContent":["import './card.css';\r\n\r\n\r\nfunction Card(props) {\r\n  const description = props.item.description\r\n  const title = props.item.title\r\n  const url = props.item.url\r\n  const urlToImage = props.item.urlToImage\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={urlToImage} alt=\"картинка\" />\r\n      <div className=\"card-wrapper\">\r\n        <div className=\"card__span\">  \r\n        </div>\r\n        <a href={url}>ссылка</a>\r\n        <h4 className=\"card__title\">{title}</h4>\r\n        <h5 className=\"card__description\">{description}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Card from \"./components/card/Card\";\n\nfunction App() {\n  const { title, url, urlToImage } = [];\n  const cardsSumma = 10; //количество рендеров карточек\n\n\n  const [news, setCards] = useState([]);\n  const wrapperReference = useRef(null);\n  const [card, setCard] = useState(cardsSumma);\n  let renderNews = [\n    ...news.slice(0, cardsSumma),\n    ...news.slice(cardsSumma, card),\n  ]; //создание итового массива данных\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleScroll = (e) => {\n    if (e.target.scrollWidth - e.target.scrollLeft <= e.target.clientWidth) {\n      setCard(card + 1);\n    }\n  };\n\n  useEffect(() => {\n    const getCards = async () => {\n      const res = await axios.get(\n        \"https://nomoreparties.co/news/v2/everything?language=ru&sortBy=publishedAt&pageSize=100&qInTitle=Россия&apiKey=10e8db0981ec4941becf1c27cd92454d\"\n      );\n      setCards(res.data.articles);\n    };\n    getCards();\n  }, []);\n\n  useEffect(() => {\n    const { current } = wrapperReference;\n    current.addEventListener(\"scroll\", handleScroll);\n    return () => current.removeEventListener(\"scroll\", handleScroll);\n    // eslint-disable-next-line\n  }, [handleScroll]);\n\n  return (\n    <div className=\"App\">\n      <h1>Новости России</h1>\n      <h3>Карточки добавляются по движению ползунка</h3>\n      <div className=\"wrapper\" ref={wrapperReference}>\n        {renderNews.map((item, index) => (\n          <Card\n            key={index}\n            item={item}\n            url={url}\n            title={title}\n            urlToImage={urlToImage}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}